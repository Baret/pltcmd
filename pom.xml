<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.gleex.pltcmd</groupId>
	<artifactId>pltcmd</artifactId>
	<packaging>pom</packaging>
	<version>0.2.0-SNAPSHOT</version>

	<name>PltCmd</name>
	<description>PltCmd is a strategy game that puts you in control of a whole army with nothing but a radio at your hands.</description>

	<scm>
		<connection>scm:git:https://github.com/Baret/pltcmd.git</connection>
		<developerConnection>scm:git:git@github.com:Baret/pltcmd.git</developerConnection>
		<url>https://github.com/Baret/pltcmd</url>
		<tag>HEAD</tag>
	</scm>

	<modules>
		<module>util</module>
		<module>model</module>
		<module>game</module>
    </modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>

		<kotlin.compiler.jvmTarget>21</kotlin.compiler.jvmTarget>
		<kotlin.version>2.2.21</kotlin.version>
		<kotlin.api.version>2.1</kotlin.api.version>
		<!-- version used by Kotest -->
		<kotlinx.coroutines.version>1.10.2</kotlinx.coroutines.version>
		<serialization.version>1.9.0</serialization.version>

		<zircon.version>2022.1.0-RELEASE</zircon.version>
		<amethyst.version>2022.1.0-RELEASE</amethyst.version>
		<!-- Should match the higher version used by Amethyst or Zircon -->
		<cobalt.version>2022.1.0-RELEASE</cobalt.version>
		<kotlinx-collections-immutable.version>0.4.0</kotlinx-collections-immutable.version>

		<jupiter.version>6.0.0</jupiter.version>
		<kotest.version>6.0.4</kotest.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<exclusions>
				<exclusion>
					<!-- coroutines comes with a newer version -->
					<groupId>org.jetbrains</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-serialization-core</artifactId>
			<version>${serialization.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-core-jvm</artifactId>
			<version>${kotlinx.coroutines.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hexworks.cobalt</groupId>
			<artifactId>cobalt.core-jvm</artifactId>
			<version>${cobalt.version}</version>
			<exclusions>
				<exclusion>
					<!-- cobalt comes with an incredibly old kotlin -->
					<groupId>org.jetbrains.kotlin</groupId>
					<artifactId>kotlin-stdlib-common</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jetbrains.kotlinx</groupId>
					<artifactId>kotlinx-coroutines-core-jvm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- test dependencies -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-runner-junit5-jvm</artifactId>
			<version>${kotest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-assertions-core-jvm</artifactId>
			<version>${kotest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kotest</groupId>
			<artifactId>kotest-property-jvm</artifactId>
			<version>${kotest.version}</version>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>io.kotest</groupId>
            <artifactId>kotest-assertions-table-jvm</artifactId>
            <version>${kotest.version}</version>
            <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>io.kotest.extensions</groupId>
			<artifactId>kotest-assertions-arrow</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.mockk</groupId>
			<artifactId>mockk-jvm</artifactId>
			<version>1.14.6</version>
			<scope>test</scope>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>io.github.microutils</groupId>
			<artifactId>kotlin-logging-jvm</artifactId>
			<version>3.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.17</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.5.20</version>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-bom</artifactId>
				<version>${kotlin.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.jetbrains.kotlinx</groupId>
				<artifactId>kotlinx-collections-immutable-jvm</artifactId>
				<version>${kotlinx-collections-immutable.version}</version>
			</dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
			<dependency>
				<groupId>org.hexworks.zircon</groupId>
				<artifactId>zircon.core-jvm</artifactId>
				<version>${zircon.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hexworks.zircon</groupId>
				<artifactId>zircon.jvm.swing</artifactId>
				<version>${zircon.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hexworks.amethyst</groupId>
				<artifactId>amethyst.core-jvm</artifactId>
				<version>${amethyst.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<version>${kotlin.version}</version>
				<configuration>
					<languageVersion>${kotlin.api.version}</languageVersion>
					<apiVersion>${kotlin.api.version}</apiVersion>
					<jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>

					<compilerPlugins>
						<plugin>kotlinx-serialization</plugin>
					</compilerPlugins>
				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>test-compile</id>
						<goals>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-serialization</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.5.4</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.6.2</version>
				<executions>
					<execution>
						<id>enforce-upper-bound-deps</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireUpperBoundDeps />
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<!-- TODO need a distributionManagement for deploy -->
					<goals>install</goals>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
